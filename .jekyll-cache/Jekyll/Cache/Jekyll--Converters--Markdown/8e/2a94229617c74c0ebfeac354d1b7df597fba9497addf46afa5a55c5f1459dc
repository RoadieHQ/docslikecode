I"˜)<p>Sphinx works with either major versions of Python active today, Python 2 and Python 3. Python 3 is the current and recommended version, and Python 2 is an unsupported Python version. Sphinx is a documentation tool that creates HTML, CSS, and JavaScript files from <a href="http://docutils.sourceforge.net/rst.html">ReStructured</a> text files.</p>

<p>In case you need both versions, refer to the <a href="https://www.python.org/downloads/">Downloads on the Python site</a>.</p>

<h2 id="prerequisites">Prerequisites</h2>

<ul>
  <li>MacOS or a Linux-based environment in which to install Python.</li>
  <li>Homebrew installed on MacOS. Get installation instructions from https://brew.sh/.</li>
</ul>

<h2 id="installing-python-3x">Installing Python 3.x</h2>

<p>You want the latest version of Python 3 available.</p>

<ol>
  <li>
    <p>Open a terminal and use <code class="language-plaintext highlighter-rouge">brew</code> to install the latest Python 3.x (currently 3.7).</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> brew install python
</code></pre></div>    </div>
  </li>
</ol>

<h3 id="verifying-the-python-installation">Verifying the Python installation</h3>

<ol>
  <li>Open a terminal.</li>
  <li>
    <p>Verify that Python 3 is correctly installed.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> python -V
</code></pre></div>    </div>
    <p>Expected output for February 2020:</p>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> Python 3.7.6
</code></pre></div>    </div>
  </li>
</ol>

<h2 id="set-up-virtual-environment">Set Up Virtual Environment</h2>

<p>Let‚Äôs ensure that you know how to create Python Virtual Environments for each version of Python. These <a href="https://docs.python.org/3/tutorial/venv.html">Python Virtual Environments</a> provide a method of creating isolated ‚Äúenvironments‚Äù where you can work with specific versions of Python along with independent sets of libraries and dependencies.</p>

<p>Most people use Virtual Environments because it‚Äôs a recommended practice when working in Python to ensure a known starting point or state.</p>

<p><strong>Python 3</strong></p>

<ol>
  <li>
    <p>First create a Python 3 virtual environment using the <code class="language-plaintext highlighter-rouge">venv</code> module included with Python 3.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> python -m venv py3-sphinx
</code></pre></div>    </div>
  </li>
  <li>
    <p>Now ‚Äúactivate‚Äù the environment. Look for the name of the virtual environment enclosed in parenthesis after activation.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> source py3-sphinx/bin/activate
</code></pre></div>    </div>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> # Expected Output
 (py3-sphinx) $
</code></pre></div>    </div>
  </li>
  <li>
    <p>Now verify that <code class="language-plaintext highlighter-rouge">python</code> is now linked to Python 3.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> (py3-sphinx) $ python -V
</code></pre></div>    </div>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> (py3-sphinx) $ Python 3.7.6
</code></pre></div>    </div>
  </li>
</ol>

<h2 id="install-sphinx-in-the-virtual-environment">Install Sphinx in the Virtual Environment</h2>

<ol>
  <li>
    <p>With the virtual environment activated, install Sphinx.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(py3-sphinx) $ pip install sphinx
</code></pre></div>    </div>
  </li>
  <li>
    <p>To verify that Sphinx is installed, run the <code class="language-plaintext highlighter-rouge">sphinx-build</code> command with the <code class="language-plaintext highlighter-rouge">--help</code> parameter.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(py3-sphinx) $ sphinx-build --help
</code></pre></div>    </div>
  </li>
</ol>

<h2 id="create-a-basic-sphinx-project">Create a Basic Sphinx Project</h2>

<p>You can also get familiar with <a href="http://docutils.sourceforge.net/docs/user/rst/quickstart.html">ReStructured text</a>, a plain text markup syntax system that you use to write content in Sphinx documentation. Sphinx can also accept <a href="https://commonmark.org/help/">Markdown</a> files.</p>

<ol>
  <li>Create a new directory for your project:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  (py3-sphinx) $ mkdir do-docs-as-code
</code></pre></div>    </div>
  </li>
  <li>With the virtual environment still activated, run <code class="language-plaintext highlighter-rouge">sphinx-quickstart</code>, which creates a starting project for a Sphinx documentation project.
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  $ sphinx-quickstart
</code></pre></div>    </div>
  </li>
  <li>Answer all the questions from the prompts.
  You can choose enter to pick all the defaults and get a working project in the current directory (<code class="language-plaintext highlighter-rouge">.</code>).
    <blockquote>
      <p>Some notes for the context of this tutorial:</p>
      <ul>
        <li>If you create a working directory in your home directory, such as <code class="language-plaintext highlighter-rouge">~/src/</code>, then you can use a <code class="language-plaintext highlighter-rouge">git clone</code> command in the <code class="language-plaintext highlighter-rouge">src</code> directory every time. For this tutorial, you can create a directory for your project, such as <code class="language-plaintext highlighter-rouge">~/src/project-name-here</code>. This directory becomes your root path.</li>
        <li>You can either use a directory named <code class="language-plaintext highlighter-rouge">_build</code> within the root path, or have separate <code class="language-plaintext highlighter-rouge">source</code> and <code class="language-plaintext highlighter-rouge">build</code> directories, which is the default. To see an example directory structure with a <code class="language-plaintext highlighter-rouge">source</code> directory, refer to this <a href="https://github.com/justwriteclick/rockthedocs-demo">justwriteclick/rockthedocs-demo</a> repo on GitHub.</li>
        <li>When answering the questions, note that you can choose ‚Äúgithubpages set to yes‚Äù to create a <code class="language-plaintext highlighter-rouge">.nojekyll</code> file to publish the document on GitHub pages. In our case, though, our example builds to Read the Docs, so you can use the defaults throughout.</li>
      </ul>
    </blockquote>
  </li>
  <li>Once you have the basics answered, the script creates the necessary files and you can edit those to your liking.</li>
  <li>Create a couple of <code class="language-plaintext highlighter-rouge">.rst</code> files and add skeleton information for starters.
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  $ touch source/prerequisites.rst
  $ touch source/about.rst
</code></pre></div>    </div>
  </li>
  <li>Edit those new <code class="language-plaintext highlighter-rouge">.rst</code> files in your favorite text editor.</li>
  <li>Now, you can build the docs to see the changes locally. Run this command in the directory with the <code class="language-plaintext highlighter-rouge">conf.py</code> file:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  $ make html
</code></pre></div>    </div>
  </li>
  <li>In your browser, open the <code class="language-plaintext highlighter-rouge">build/html/index.html</code> file to take a look at your Sphinx site locally. You can also look at <code class="language-plaintext highlighter-rouge">build/html/prerequisites.html</code> and <code class="language-plaintext highlighter-rouge">build/html/about.html</code> though they won‚Äôt be linked to the main page until you add them as a link or in a table of contents entry.</li>
  <li>Edit the <code class="language-plaintext highlighter-rouge">source/index.rst</code> file to include links to the additional pages.
Here is an example:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> .. toctree::
    :maxdepth: 2
    :caption: Contents:

    about.rst
    prerequisites.rst
</code></pre></div>    </div>
  </li>
  <li>Build again to see these changes locally:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  $ make html
</code></pre></div>    </div>
  </li>
  <li>In your browser, refresh the <code class="language-plaintext highlighter-rouge">build/html/index.html</code> page to see the new Contents with two entries linked.
<img src="/images/learn/sphinx-docs-page.png" alt="Rock the docs example site" /></li>
  <li>Make sure you commit your changes to the Git repository by following the steps in <a href="https://docslikecode.com/learn/04-add-content-workflow/">Working with content in GitHub repositories</a>.</li>
</ol>

<h2 id="whats-next">What‚Äôs next</h2>

<ul>
  <li><a href="https://docslikecode.com/learn/04-add-content-workflow/">Working with content in GitHub repositories</a></li>
  <li><a href="https://www.docslikecode.com/learn/05-cd-for-docs/">Continuous Deployment (CD) for Documentation Sites</a></li>
  <li><a href="https://www.docslikecode.com/learn/06-test-docs-as-code/">Set Up Automated Tests for Docs</a></li>
</ul>

<h2 id="evaluating-options">Evaluating options</h2>

<ul>
  <li><a href="https://www.docslikecode.com/learn/07-evaluating-ssg-themes/">Evaluating Static Site Generator themes</a></li>
  <li><a href="https://www.docslikecode.com/learn/08-evaluating-table-layouts/">Evaluating table layouts and formatting</a></li>
  <li><a href="https://www.docslikecode.com/learn/09-ssg-search-implementations/">Evaluating Static Site Generator search options</a></li>
</ul>

<h2 id="additional-references">Additional references</h2>

<ul>
  <li><a href="https://www.sphinx-doc.org/en/stable/">Sphinx Python Documentation Generator</a></li>
  <li><a href="http://docutils.sourceforge.net/rst.html">ReStructured text documentation</a></li>
</ul>
:ET